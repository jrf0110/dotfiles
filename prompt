# Configure Colors:
COLOR_WHITE='\033[1;37m'
COLOR_LIGHTGRAY='033[0;37m'
COLOR_GRAY='\033[1;30m'
COLOR_BLACK='\033[0;30m'
COLOR_RED='\033[0;31m'
COLOR_LIGHTRED='\033[1;31m'
COLOR_GREEN='\033[0;32m'
COLOR_LIGHTGREEN='\033[1;32m'
COLOR_BROWN='\033[0;33m'
COLOR_YELLOW='\033[1;33m'
COLOR_BLUE='\033[0;34m'
COLOR_LIGHTBLUE='\033[1;34m'
COLOR_PURPLE='\033[0;35m'
COLOR_PINK='\033[1;35m'
COLOR_CYAN='\033[0;36m'
COLOR_LIGHTCYAN='\033[1;36m'
COLOR_DEFAULT='\033[0m'

# Show the exit code of the last command.
function __last_exit_code() {
  local code=$?
  if [ $code = 0 ]; then
    printf "$1"
  else
    printf "$2"
  fi
  return $code
}

# Show the bundler project name.
function __bundler_ps1 {
  local retval=$?
  if [ -n "${BUNDLE_GEMFILE-}" ]; then
    project_path="${BUNDLE_GEMFILE%/Gemfile}"
    project_name="${project_path##**/}"

    if [ -n "${1-}" ]; then
      printf "$1" "${project_name}"
    else
      printf " (%s)" "${project_name}"
    fi
  fi
  return $retval
}

# Trim working dir to 1/2 the screen width
function prompt_workingdir () {
  local pwdmaxlen=$(($COLUMNS/2))
  local trunc_symbol="..."
  if [[ $PWD == $HOME* ]]; then
    newPWD="~${PWD#$HOME}" 
  else
    newPWD="\w"
  fi
  if [ ${#newPWD} -gt $pwdmaxlen ]; then
    local pwdoffset=$(( ${#newPWD} - $pwdmaxlen + 3 ))
    newPWD="${trunc_symbol}${newPWD:$pwdoffset:$pwdmaxlen}"
  fi
  echo $newPWD
}

# Show lots of info in the __git_ps1 output.
export GIT_PS1_SHOWDIRTYSTATE="true"
export GIT_PS1_SHOWSTASHSTATE="true"
export GIT_PS1_SHOWUNTRACKEDFILES="true"

# Constructing the Bash prompt
# * bundler project name (bundle exec bash)
export PS1='\[\e[36m\]$(__bundler_ps1 "[%s] ")\[\e[0m\]'
# * current directory
#export PS1=$PS1'\w '

# Working directory
#PS1="${PS1}\[${COLOR_CYAN}\]$(prompt_workingdir)"

# variable/to/.../shorten/long_paths
PROMPT_COMMAND='DIR=`pwd|sed -e "s!$HOME!~!"`; if [ ${#DIR} -gt 28 ]; then CurDir=${DIR:0:9}...${DIR:${#DIR}-22}; else CurDir=$DIR; fi'
# the prompt
PS1=$PS1"${COLOR_YELLOW}âˆ† ${COLOR_LIGHTCYAN}\${CurDir}"

# * last exit code (green on success, otherwise red)
export PS1=$PS1' $(__last_exit_code "\[\033[1;32m\]:D\[\033[00m\]" "\[\033[01;31m\]D:\[\033[00m\]")'
# * git prompt (branch, dirty/stash/untracked files state)
(type __git_ps1 2>/dev/null | grep -q 'is a function') &&
export PS1=$PS1'$(__git_ps1 " (\[\e[0;32m\]%s\[\e[0m\])")'

# * Nice space
export PS1=$PS1' '

# * terminal window title (user@host:/currentdir)
export PS1=$PS1'\[\033]2;\u@\h: $PWD\007\]'
# * terminal tab title (parentdir/currentdir)
export PS1=$PS1'\[\033]1;$(echo $(basename $(dirname "$PWD"))/\W|tr -s /)\007\]'
